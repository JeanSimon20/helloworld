name: Deploy

on:
  push:
    branches: 
      - main
  workflow_dispatch:

jobs:
  deploy:
    runs-on: 'ubuntu-latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven
      - name: Build with Maven
        run: mvn clean install package

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.java.binaries=target/classes
            -Dsonar.sources= src

      - name: Log in to Azure Container Registry
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.ACR_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - name: Build Docker image
        run: docker build -t ${{ secrets.ACR_SERVER }}/${{ github.event.repository.name }}:${{ github.sha }} .

      - name: Push Docker image
        run: docker push ${{ secrets.ACR_SERVER }}/${{ github.event.repository.name }}:${{ github.sha }}
      - uses: azure/login@v2
        with:
          creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'
      - name: Set up Kubernetes tools
        run: |
          az aks get-credentials --resource-group ${{ vars.RESOURCE_GROUP }} --name ${{ vars.CLUSTER_NAME }}      
      - uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.24'
      - name: Use kubelogin with spn method
        run: |
          kubelogin convert-kubeconfig -l spn --client-id ${{ secrets.AZURE_CLIENT_ID }} --client-secret ${{ secrets.AZURE_CLIENT_SECRET }} --tenant-id ${{ secrets.AZURE_TENANT_ID }}
      - name: replace tag
        run: sed -i "s|latest|${{ github.sha }}|g" ${{ github.workspace }}/aks/main.yml
      - name: Deploy to AKS
        run: |
          kubectl delete -f ${{ github.workspace }}/aks/main.yml
        continue-on-error: true
      - name: Deploy to AKS
        run: |
          kubectl apply -f ${{ github.workspace }}/aks/main.yml
      - name: Creacion de Task
        run: |
          sleep 60    # espera 60 segundos
          kubectl get all -n helloworld
